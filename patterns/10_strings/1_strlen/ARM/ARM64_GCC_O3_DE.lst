my_strlen:
	mov	x1, x0
	; X1 ist der temporäre Pointer (eos), verhält sich wie ein Â§\IT{Cursor}Â§
.L58:
	; lade Byte von X1 nach W2, erhöhe X1 (post-index)
	ldrb	w2, [x1],1
	; Vergleich und Verzweigung, falls nicht null: vergleiche W2 mit 0, springe
	; nach .L58, falls ungleich
	cbnz	w2, .L58
	; berechne Differenz zwischen ursprünglichem Pointer in X0 und aktueller
	; Adresse in X1 
	sub	x0, x1, x0
	; dekrementiere niedere 32-bit des Ergebnisses
	sub	w0, w0, #1
	ret
